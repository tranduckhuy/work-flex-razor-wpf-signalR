@page
@model WorkFlex.Web.Pages.Chat.IndexModel

@{
    ViewData["Title"] = "Chat";
}

<h2 class="text-center">Chat App</h2>

<div class="chat-app d-flex justify-content-center">
    <!-- User List Section -->
    <div class="usersContainer">
        <h4 class="text-center">Messages</h4>
        <div class="list-group">
            @foreach (var user in Model.Users)
            {
                <a class="list-group-item list-group-item-action d-flex align-items-center border-0 rounded shadow-sm mb-2 user-item"
                   asp-page="/Chat/Index" asp-route-otherUserId="@user.Id">
                    <img src="@user.Avatar" alt="@user.Username" class="rounded-circle user-avatar" />
                    <div class="flex-grow-1">
                        <h6 class="mb-1 font-weight-bold">@user.Username</h6>
                        <small class="text-muted">Last message preview...</small>
                    </div>
                </a>
            }
        </div>
    </div>

    <!-- Chat Section -->
    <div class="chatContainer">
        <div class="chatHeader">
            <img src="@Model.OtherUser.Avatar" alt="@Model.OtherUser.Username" class="header-avatar" />
            <h2 class="chat-title">Chat with @Model.OtherUser.Username</h2>
        </div>

        <!-- Messages List -->
        <div class="messagesList" id="messagesList">
            @foreach (var message in Model.Messages)
            {
                <div class="message @(message.UserId == Model.CurrentUser.Id.ToString().ToUpper() ? "my-message" : "other-message")">
                    <div class="messageContent @(message.UserId == Model.CurrentUser.Id.ToString().ToUpper() ? "my-message-content" : "")">
                        @message.Reply
                    </div>
                    <img src="@message.Avatar" alt="@message.UserName" class="message-avatar @(message.UserId != Model.CurrentUser.Id.ToString().ToUpper() ? "other-avatar" : "")" />
                </div>
            }
        </div>

        <!-- Input for Sending Messages -->
        <div class="inputContainer">
            <div class="chatboxContainer">
                <input type="text" id="messageInput" placeholder="Type your message..." />
                <button id="sendBtn">Send</button>
            </div>
        </div>
    </div>
</div>


@section Scripts {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/8.0.7/signalr.min.js"
            integrity="sha384-mU1xC5yC2LldSW74Rj1Ax8wPiLw/28V5eh51uKJMlBbRVsOtUYd4xyzNsgIAJARB"
            crossorigin="anonymous">
    </script>
    <script type="text/javascript">
        const userId = '@Model.CurrentUser.Id';
        const otherUserId = '@Model.OtherUser.Id';
        const conversationId = '@Model.ConversationId';

        const connection = new signalR.HubConnectionBuilder()
            .withUrl("https://localhost:7178/chathub")
            .build();

        connection.start().then(function () {
            connection.invoke("JoinConversation", conversationId);
        });

        connection.on("ReceiveMessage", function (userId, userName, message, time) {
            const msg = document.createElement("div");
            const currentUser = "@Model.CurrentUser.Id.ToString().ToUpper()";
            msg.className = userId === currentUser ? "message my-message" : "message other-message";

            const messageContent = document.createElement("div");
            messageContent.className = userId === currentUser ? "messageContent my-message-content" : "messageContent";
            messageContent.innerText = message;

            const avatarImg = document.createElement("img");
            avatarImg.src = message.Avatar;
            avatarImg.alt = userName;
            avatarImg.className = userId !== currentUser ? "message-avatar other-avatar" : "message-avatar";

            msg.appendChild(messageContent);
            msg.appendChild(avatarImg);

            document.getElementById("messagesList").appendChild(msg);

            scrollToBottom();
        });

        function sendMessage() {
            const message = document.getElementById("messageInput").value;
            if (message.trim() === "") return;
            connection.invoke("SendMessage", userId, message, otherUserId, conversationId).then(() => {
                document.getElementById("messageInput").value = "";
            }).catch((err) => {
                return console.log(err.toString());
            });
        }

        document.getElementById("sendBtn").addEventListener("click", function (event) {
            sendMessage();
            event.preventDefault();
        });

        document.getElementById("messageInput").addEventListener("keydown", function (event) {
            if (event.key === "Enter") {
                sendMessage();
                event.preventDefault();
            }
        });

        function scrollToBottom() {
            const messagesList = document.getElementById("messagesList");
            messagesList.scrollTop = messagesList.scrollHeight;
        }

        window.onload = scrollToBottom;
    </script>
}

<style>
    /* Main container for the chat application */
    .chat-app {
        width: 60%;
        margin: 0 auto;
        padding: 0;
        font-family: Arial, sans-serif;
        background-color: #f1f1f1;
        height: 800px;
        margin-bottom: 40px;
    }

    /* User List Container */
    .usersContainer {
        width: 35%;
        padding: 20px;
        background-color: #f8f9fa;
        border-right: 1px solid #ddd;
        overflow-y: auto;
    }

    /* User List Items */
    .user-item {
        display: flex;
        align-items: center;
        background-color: #ffffff;
        color: #333;
        box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
        transition: background-color 0.3s, transform 0.2s;
    }

        .user-item:hover {
            background-color: #e9ecef;
            transform: scale(1.02);
        }

    /* Avatar inside the User List */
    .user-avatar {
        width: 60px;
        height: 60px;
        border-radius: 50%;
        margin-right: 15px;
    }

    /* Chat Container */
    .chatContainer {
        flex: 1;
        padding: 20px;
        display: flex;
        flex-direction: column;
        background-color: #f1f3f5;
        position: relative;
    }

    /* Chat Header (with avatar and title) */
    .chatHeader {
        display: flex;
        align-items: center;
        padding-bottom: 15px;
        border-bottom: 1px solid #ddd;
    }

    .header-avatar {
        width: 50px;
        height: 50px;
        border-radius: 50%;
        margin-right: 15px;
    }

    .chat-title {
        font-size: 1.5em;
        color: #333;
    }

    /* Messages List */
    .messagesList {
        flex-grow: 1;
        padding: 15px;
        display: flex;
        flex-direction: column;
        overflow-y: auto;
    }

    /* Message Styling */
    .message {
        display: flex;
        align-items: center;
        margin-bottom: 15px;
    }

    .my-message {
        justify-content: flex-end;
    }

    .other-message {
        justify-content: flex-start;
    }

    .messageContent {
        max-width: 75%;
        padding: 10px 16px;
        border-radius: 12px;
        background-color: #e0e0e0;
        word-wrap: break-word;
    }

    .my-message-content {
        background-color: #0084ff;
        color: white;
    }

    /* Avatar inside messages */
    .message-avatar {
        width: 45px;
        height: 45px;
        border-radius: 50%;
        margin-left: 10px;
    }

    .other-avatar {
        order: -1; /* Place avatar on the right for current user */
        margin-right: 10px;
        margin-left: 0;
    }

    /* Chat Input and Button */
    .inputContainer {
        margin-top: 10px;
    }

    .chatboxContainer {
        display: flex;
        justify-content: space-between;
        align-items: center;
    }

    #messageInput {
        flex: 1;
        padding: 12px;
        border-radius: 4px;
        border: 1px solid #ccc;
        margin-right: 10px;
        box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
        background-color: #fff;
    }

    #sendBtn {
        padding: 12px 20px;
        border-radius: 4px;
        border: none;
        background-color: #0084ff;
        color: white;
        cursor: pointer;
        transition: background-color 0.3s, transform 0.2s;
    }

        #sendBtn:hover {
            background-color: #006bbd;
            transform: scale(1.05);
        }

    /* Scrollbar styling */
    .usersContainer, .messagesList {
        scrollbar-width: thin;
        scrollbar-color: #c0c0c0 transparent;
    }

        .usersContainer::-webkit-scrollbar, .messagesList::-webkit-scrollbar {
            width: 8px;
        }

        .usersContainer::-webkit-scrollbar-thumb, .messagesList::-webkit-scrollbar-thumb {
            background-color: #c0c0c0;
            border-radius: 10px;
        }
</style>
